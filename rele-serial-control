/*
rele serial control
*/

// set pin numbers:
const int ledPin =  13;      // the number of the LED pin

// Variables will change:
int ledState = LOW;             // ledState used to set the LED

String inputString = "";         // a string to hold incoming data
boolean stringComplete = false;  // whether the string is complete


void setup()
{
  Serial.begin(9600);
  Serial.println("File\t: sketch_20140607 ");
  Serial.println("Version\t: 21.43 ");
  Serial.println("Uso\t: Prueba de rele remoto ");
  Serial.println("Fecha\t: 2014-jun-07 Carlos Guerra C");

  inputString.reserve(200);

  // set the digital pin as output:
  pinMode(ledPin, OUTPUT);      

}


void loop()
{
  // READ DATA
  //Serial.print("inicio \n");
  //delay(2000);
  
  
  // print the string when a newline arrives:
  if (stringComplete) 
  {
    changeRele();
    
    Serial.println(inputString); 

    // clear the string:
    inputString = "";
    stringComplete = false;
  }
}

int changeRele()
{
    Serial.println("Changing Rele state"); 
  // if the LED is off turn it on and vice-versa:
    if (ledState == LOW)
      ledState = HIGH;
    else
      ledState = LOW;  

    // set the LED with the ledState of the variable:
    digitalWrite(ledPin, ledState);  
}

/*
  SerialEvent occurs whenever a new data comes in the
 hardware serial RX.  This routine is run between each
 time loop() runs, so using delay inside loop can delay
 response.  Multiple bytes of data may be available.
 */
void serialEvent() 
{
  while (Serial.available()) 
  {
    // get the new byte:
    char inChar = (char)Serial.read(); 
    // add it to the inputString:
    inputString += inChar;
    // if the incoming character is a newline, set a flag
    // so the main loop can do something about it:
    if (inChar == '\n') 
    {
      stringComplete = true;
    } 
  }
}
//
// END OF FILE
//Enter file contents here
